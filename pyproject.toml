[project]
name = "graphml-viewer"
version = "0.1.0"
description = "A comprehensive GraphML visualization tool for LightRAG knowledge graphs"
readme = "README.md"
authors = [
    { name = "Jesse Swan", email = "jesseaswan@gmail.com" }
]
requires-python = ">=3.12"
dependencies = [
    "networkx>=3.2",
    "matplotlib>=3.8.0",
    "plotly>=5.17.0",
    "streamlit>=1.28.0",
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    "seaborn>=0.12.0",
    "dash>=2.14.0",
    "dash-cytoscape>=0.3.0",
    "python-louvain>=0.16",
    "bokeh>=3.3.0",
    "pyvis>=0.3.2",
    "colorcet>=3.0.1",
    "scikit-learn>=1.3.0",
    "watchdog>=6.0.0",
]

[project.scripts]
graphml-viewer = "graphml_viewer.cli:main"

[dependency-groups]
dev = [
    "ruff>=0.1.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py312"
line-length = 88
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "TCH", # flake8-type-checking
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
]
ignore = [
    "E501",  # line too long (handled by line-length)
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise-without-from-inside-except
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["graphml_viewer"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src/graphml_viewer",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
